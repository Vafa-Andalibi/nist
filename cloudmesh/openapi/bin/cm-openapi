#! /usr/bin/env python

"""Cloudmesh OpenAPI Code Generator.

Usage:
  cm-openapi update
  cm-openapi generate SERVICES...
  cm-openapi create SERVICES... --target=SERVICE
  cm-openapi rm SERVICES...
  cm-openapi run SERVICES...
  cm-openapi kill SERVICES...
  cm-openapi ps
  cm-openapi info SERVICE
  cm-openapi pack docker SERVICES...

  cm-openapi (-h | --help)
  cm-openapi --version

Options:
  -h --help     Show this screen.
  --version     Show version.

Files:
  This is not fully thought through
  ~/.cloudmesh/bin/cm-openapi
    location of the executable
  ~/.cloudmesh/lib/cm-openapi
    location of the samples

Description:

  generate SERVICES...
    generates the service stubs while using the example as template
    replaces the "example" with SERVICE where needed

  create SERVICES... --target=SERVICE
    creates all the REST SERVICE

  pack docker SERVICES... --target=SERVICE
    creates all the REST SERVICES in a docker container

  rm SERVICES... 
    deletes the source of the services. This function must be 
    executed with care

  run SERVICES...
    runs the service

  kill SERVICES...
    kills the service

  ps
    lists all running services

  info SERVICE
     provides information about the service

"""

''' manual page draft

have some kind of git script similar to

curl -L https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer | bash

'''

from docopt import docopt

VERSION="0.1"

def generate(services):
    print (services)

def kill(services):
    print (services)

def run(services):
    print (services)

def rm(services):
    print (services)

def create(services):
    print (services)

def pack(services):
    print (services)

def ps(services):
    print (services)



if __name__ == '__main__':
    arguments = docopt(__doc__, version=VERSION)
    print(arguments)
    if "generate" in arguments:
       generate(arguments["SERVICES"])
    elif "kill" in arguments:
       kill(arguments["SERVICES"])
    elif "run" in arguments:
       run(arguments["SERVICES"])
    elif "rm" in arguments:
       rm(arguments["SERVICES"])
    elif "create" in arguments:
       create(arguments["SERVICES"])
    elif "pack" in arguments:
       pack(arguments["SERVICES"])
    elif "ps" in arguments:
       ps()
       