---
swagger: "2.0"
info:
  description: "Virtual Cluster example"
  version: "0.0.1"
  title: "Virtual Cluster"
  termsOfService: "http://bin.io/terms/"
  contact:
    name: "Cloudmesh REST Service Example"
    url: "https://cloudmesh-community.github.io/nist/spec/"
  license:
    name: "Apache"
host: "localhost:8080"
schemes:
- "http"
consumes:
- "application/json"
produces:
- "application/json"
paths:
  /cloudmesh/vc/vcs:
    get:
      tags:
      - "vc"
      description: "Returns all vcs"
      operationId: "get_vc"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "profile info"
          schema:
            $ref: "#/definitions/VC"
      x-swagger-router-controller: "swagger_server.controllers.vc_controller"
    put:
      tags:
      - "vc"
      summary: "Create a new vc"
      operationId: "add_vc"
      parameters:
      - in: "body"
        name: "vc"
        description: "The new vc to create"
        required: false
        schema:
          $ref: "#/definitions/VC"
      responses:
        201:
          description: "Created"
      x-swagger-router-controller: "swagger_server.controllers.vc_controller"
  /cloudmesh/vc/vcs/{vcname}:
    get:
      tags:
      - "vc"
      description: "Returns a vc by its name"
      operationId: "get_vc_by_name"
      produces:
      - "application/json"
      parameters:
      - name: "vcname"
        in: "path"
        required: true
        type: "string"
      responses:
        200:
          description: "vc info"
          schema:
            $ref: "#/definitions/VC"
      x-swagger-router-controller: "swagger_server.controllers.vc_controller"
  /cloudmesh/vc/vcs/{vcname}/fe:
    get:
      tags:
      - "vc"
      description: "Returns the front-end node info of the specified vc"
      operationId: "get_vc_fe_by_name"
      produces:
      - "application/json"
      parameters:
      - name: "vcname"
        in: "path"
        required: true
        type: "string"
      responses:
        200:
          description: "vc front-end info"
          schema:
            $ref: "#/definitions/Node"
      x-swagger-router-controller: "swagger_server.controllers.vc_controller"
  /cloudmesh/vc/vcs/{vcname}/{nodename}:
    get:
      tags:
      - "vc"
      description: "Returns the specified node info of the specified vc"
      operationId: "get_vc_node_by_name"
      produces:
      - "application/json"
      parameters:
      - name: "vcname"
        in: "path"
        required: true
        type: "string"
      - name: "nodename"
        in: "path"
        required: true
        type: "string"
      responses:
        200:
          description: "vc node info"
          schema:
            $ref: "#/definitions/Node"
      x-swagger-router-controller: "swagger_server.controllers.vc_controller"
definitions:
  VC:
    type: "object"
    properties:
      name:
        type: "string"
      description:
        type: "string"
      nnodes:
        type: "integer"
      owner:
        type: "string"
      fe:
        $ref: "#/definitions/Node"
      nodes:
        type: "array"
        items:
          $ref: "#/definitions/Node"
    example:
      owner: "owner"
      nodes:
      - disk: "disk"
        name: "name"
        nics:
        - ip: "ip"
          mac: "mac"
        - ip: "ip"
          mac: "mac"
        ncpu: 6
        state: "state"
        ram: "ram"
      - disk: "disk"
        name: "name"
        nics:
        - ip: "ip"
          mac: "mac"
        - ip: "ip"
          mac: "mac"
        ncpu: 6
        state: "state"
        ram: "ram"
      nnodes: 0
      name: "name"
      description: "description"
      fe:
        disk: "disk"
        name: "name"
        nics:
        - ip: "ip"
          mac: "mac"
        - ip: "ip"
          mac: "mac"
        ncpu: 6
        state: "state"
        ram: "ram"
  Node:
    type: "object"
    properties:
      name:
        type: "string"
      state:
        type: "string"
      ncpu:
        type: "integer"
      ram:
        type: "string"
      disk:
        type: "string"
      nics:
        type: "array"
        items:
          $ref: "#/definitions/NIC"
    example:
      disk: "disk"
      name: "name"
      nics:
      - ip: "ip"
        mac: "mac"
      - ip: "ip"
        mac: "mac"
      ncpu: 6
      state: "state"
      ram: "ram"
  NIC:
    type: "object"
    properties:
      mac:
        type: "string"
      ip:
        type: "string"
    example:
      ip: "ip"
      mac: "mac"
